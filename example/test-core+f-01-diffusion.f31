  double :: d
  d = 0.1
  double[0..99, 0..99] :: rho_init
  rho_init[i,j] = 1e4 * (i==50) * (j==50)
  initial_condition :: rho_init


  begin function update(in rho_current, out rho_next)
    double[0..99, 0..99] :: rho_current

    double[-1..100, -1..100] :: rho
    rho = rho_current || 0

    double[-1/2..99+1/2, 0..99] :: flux_x
    double[0..99, -1/2..99+1/2] :: flux_y
    flux_x[i+1/2,j] = rho[i+1,j] - rho[i,j]
    flux_y[i,j+1/2] = rho[i,j+1/2] - rho[i,j]

    double[0..99, 0..99] :: rho_next
    rho_next = rho[i,j] + d * (flux_x[i+1/2,j]-flux_x[i-1/2,j] + flux_y[i+1/2,j]-flux_y[i-1/2,j])
  end function

  step_function :: update
